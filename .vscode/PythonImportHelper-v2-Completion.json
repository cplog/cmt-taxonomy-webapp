[
    {
        "label": "streamlit",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "streamlit",
        "description": "streamlit",
        "detail": "streamlit",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "product_type",
        "importPath": "data.product_type",
        "description": "data.product_type",
        "isExtraImport": true,
        "detail": "data.product_type",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "product_type",
        "kind": 5,
        "importPath": "data.product_type",
        "description": "data.product_type",
        "peekOfCode": "product_type = {\n    \"T-Shirt\": {\n        \"Fabric\": [\"Cotton\", \"Organic Cotton\", \"Polyester\", \"Cotton-Polyester Blend\", \"Modal\", \"Lyocell\"],\n        \"Printing\": [\"Screen Printing\", \"Digital Printing\", \"Heat Transfer\", \"Embroidery\"],\n        \"Cutting\": [\"Die Cutting\", \"Laser Cutting\", \"Automated Cutting\"],\n        \"Sewing\": [\"Overlock Stitching\", \"Flatlock Stitching\", \"Cover Stitching\"],\n        \"Finishing\": [\"Steam Pressing\", \"Folding and Packaging\", \"Labeling\", \"Hang Tag Attachment\"]\n    },\n    \"Jeans\": {\n        \"Fabric\": [\"Denim\", \"Stretch Denim\", \"Organic Denim\", \"Recycled Denim\"],",
        "detail": "data.product_type",
        "documentation": {}
    },
    {
        "label": "get_styles",
        "kind": 2,
        "importPath": "pages.1_capability",
        "description": "pages.1_capability",
        "peekOfCode": "def get_styles():\n    return \"\"\"\n    <style>\n    body {\n        font-family: 'Arial', sans-serif;\n        color: #1D3557;\n    }\n    .product-card {\n        background-color: #F1FAEE;\n        border-radius: 10px;",
        "detail": "pages.1_capability",
        "documentation": {}
    },
    {
        "label": "setup_ui",
        "kind": 2,
        "importPath": "pages.1_capability",
        "description": "pages.1_capability",
        "peekOfCode": "def setup_ui():\n    st.set_page_config(page_title=\"Garment Manufacturing Matchmaker\", layout=\"wide\")\n    st.markdown(get_styles(), unsafe_allow_html=True)\n    st.title(\"Garment Manufacturing Matchmaker\")\n    st.write(\"\"\"\n    <div class=\"intro\">\n        Find the perfect factory for your garment manufacturing needs. \n        Select your product type and specifications, and we'll match you with suitable factories.\n    </div>\n    \"\"\", unsafe_allow_html=True)",
        "detail": "pages.1_capability",
        "documentation": {}
    },
    {
        "label": "get_product_types",
        "kind": 2,
        "importPath": "pages.1_capability",
        "description": "pages.1_capability",
        "peekOfCode": "def get_product_types():\n    return product_type\ndef get_factories():\n    return [\n        {\n            \"name\": \"EcoThreads Manufacturing\",\n            \"location\": \"Portland, Oregon\",\n            \"specialties\": [\"T-Shirts\", \"Sustainable Clothing\"],\n            \"min_order\": 500,\n            \"capabilities\": {",
        "detail": "pages.1_capability",
        "documentation": {}
    },
    {
        "label": "get_factories",
        "kind": 2,
        "importPath": "pages.1_capability",
        "description": "pages.1_capability",
        "peekOfCode": "def get_factories():\n    return [\n        {\n            \"name\": \"EcoThreads Manufacturing\",\n            \"location\": \"Portland, Oregon\",\n            \"specialties\": [\"T-Shirts\", \"Sustainable Clothing\"],\n            \"min_order\": 500,\n            \"capabilities\": {\n                \"Fabric\": [\"Cotton\", \"Organic Cotton\", \"Recycled Polyester\"],\n                \"Printing\": [\"Screen Printing\", \"Digital Printing\"],",
        "detail": "pages.1_capability",
        "documentation": {}
    },
    {
        "label": "product_selector",
        "kind": 2,
        "importPath": "pages.1_capability",
        "description": "pages.1_capability",
        "peekOfCode": "def product_selector(product_types):\n    st.header(\"Step 1: Select Your Product\")\n    product = st.selectbox(\"Choose a product type:\", list(product_types.keys()))\n    return product\ndef capability_selector(product, product_types):\n    st.header(\"Step 2: Specify Your Requirements\")\n    selected_capabilities = {}\n    for category, options in product_types[product].items():\n        st.subheader(category)\n        selected = st.multiselect(f\"Select {category} options:\", options)",
        "detail": "pages.1_capability",
        "documentation": {}
    },
    {
        "label": "capability_selector",
        "kind": 2,
        "importPath": "pages.1_capability",
        "description": "pages.1_capability",
        "peekOfCode": "def capability_selector(product, product_types):\n    st.header(\"Step 2: Specify Your Requirements\")\n    selected_capabilities = {}\n    for category, options in product_types[product].items():\n        st.subheader(category)\n        selected = st.multiselect(f\"Select {category} options:\", options)\n        if selected:\n            selected_capabilities[category] = selected\n    return selected_capabilities\ndef find_matching_factories(selected_capabilities, factories):",
        "detail": "pages.1_capability",
        "documentation": {}
    },
    {
        "label": "find_matching_factories",
        "kind": 2,
        "importPath": "pages.1_capability",
        "description": "pages.1_capability",
        "peekOfCode": "def find_matching_factories(selected_capabilities, factories):\n    matching_factories = []\n    for factory in factories:\n        if all(any(capability in factory['capabilities'].get(category, []) \n                   for capability in capabilities)\n               for category, capabilities in selected_capabilities.items()):\n            matching_factories.append(factory)\n    return matching_factories\ndef display_matching_factories(matching_factories):\n    st.header(\"Step 3: Matching Factories\")",
        "detail": "pages.1_capability",
        "documentation": {}
    },
    {
        "label": "display_matching_factories",
        "kind": 2,
        "importPath": "pages.1_capability",
        "description": "pages.1_capability",
        "peekOfCode": "def display_matching_factories(matching_factories):\n    st.header(\"Step 3: Matching Factories\")\n    if matching_factories:\n        st.success(f\"We found {len(matching_factories)} matching factories!\")\n        for factory in matching_factories:\n            st.markdown(f\"\"\"\n            <div class=\"factory-card\">\n                <h3>{factory['name']}</h3>\n                <p><strong>Location:</strong> {factory['location']}</p>\n                <p><strong>Specialties:</strong> {', '.join(factory['specialties'])}</p>",
        "detail": "pages.1_capability",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "pages.1_capability",
        "description": "pages.1_capability",
        "peekOfCode": "def main():\n    setup_ui()\n    product_types = get_product_types()\n    factories = get_factories()\n    product = product_selector(product_types)\n    st.markdown(f\"\"\"\n    <div class=\"product-card\">\n        <h2>{product}</h2>\n        <p>Please select the specific capabilities you need for your {product}.</p>\n    </div>",
        "detail": "pages.1_capability",
        "documentation": {}
    },
    {
        "label": "display_nested_dict_html",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def display_nested_dict_html(d, level=0, max_level=3):\n    html = \"\"\n    indent = '&nbsp;' * 4 * level\n    card_style = (\n        \"background-color: #ffffff; \"\n        \"border: 1px solid #e0e0e0; \"\n        \"border-radius: 12px; \"\n        \"margin: 4px 0 4px 20px; \"  # Adjusted margin-left for indentation\n        \"padding: 12px; \"\n        \"box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); \"",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "default_data_catalog",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "default_data_catalog = {\n    \"Data Catalog\": {\n        \"Supplier\": {\n            \"Supplier Profile\": {\n                \"Parent company\": \"\",\n                \"Associated Customers\": {\n                    \"Associated LF Customers\": \"\",\n                    \"Top 5 LF Customers\": \"\"\n                },\n                \"Supplier Status\": {",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "html_content",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "html_content = display_nested_dict_html(data_catalog)\nst.markdown(html_content, unsafe_allow_html=True)",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "get_styles",
        "kind": 2,
        "importPath": "homepage",
        "description": "homepage",
        "peekOfCode": "def get_styles():\n    return \"\"\"\n    <style>\n    body {\n        font-family: 'Arial', sans-serif;\n    }\n    .intro {\n        font-size: 1.1em;\n        background-color: #f0f0f0;\n        padding: 15px;",
        "detail": "homepage",
        "documentation": {}
    },
    {
        "label": "setup_ui",
        "kind": 2,
        "importPath": "homepage",
        "description": "homepage",
        "peekOfCode": "def setup_ui():\n    st.set_page_config(page_title=\"Comprehensive Garment Manufacturing Process\", layout=\"wide\")\n    st.markdown(get_styles(), unsafe_allow_html=True)\n    st.title(\"Comprehensive Garment Manufacturing Process\")\n    st.write(\"\"\"\n    <div class=\"intro\">\n        This interactive app displays a comprehensive overview of the garment manufacturing process, \n        including Cut-Make-Trim (CMT) and additional stages. Explore each section to understand \n        the detailed steps and techniques involved in creating clothing.\n    </div>",
        "detail": "homepage",
        "documentation": {}
    },
    {
        "label": "render_process_section",
        "kind": 2,
        "importPath": "homepage",
        "description": "homepage",
        "peekOfCode": "def render_process_section(data):\n    for section, subsections in data.items():\n        st.markdown(f\"<div class='section-header'>{section}</div>\", unsafe_allow_html=True)\n        for subsection, tasks in subsections.items():\n            with st.expander(subsection):\n                st.markdown(f\"<div class='subsection-header'>{subsection}</div>\", unsafe_allow_html=True)\n                for task, complexity, description in tasks:\n                    color = get_complexity_color(complexity)\n                    st.markdown(\n                        f\"<div class='task-item'>{task} \"",
        "detail": "homepage",
        "documentation": {}
    },
    {
        "label": "get_complexity_color",
        "kind": 2,
        "importPath": "homepage",
        "description": "homepage",
        "peekOfCode": "def get_complexity_color(complexity):\n    if complexity <= 3:\n        return \"#34a853\"  # Green for low complexity\n    elif complexity <= 6:\n        return \"#fbbc05\"  # Yellow for medium complexity\n    else:\n        return \"#ea4335\"  # Red for high complexity\ndef main():\n    setup_ui()\n    # Define the process data with detailed descriptions",
        "detail": "homepage",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "homepage",
        "description": "homepage",
        "peekOfCode": "def main():\n    setup_ui()\n    # Define the process data with detailed descriptions\n    process_data = {\n        \"1. Design and Pre-production\": {\n            \"Concept Development\": [\n                (\"Market research and trend analysis\", 7, \"Research current market trends, consumer preferences, and competitors.\"),\n                (\"Mood board creation\", 6, \"Create a visual representation of ideas, themes, and inspirations for the collection.\"),\n                (\"Sketch development\", 8, \"Develop detailed sketches of each garment, including front, back, and side views.\"),\n            ],",
        "detail": "homepage",
        "documentation": {}
    }
]